package main

import (
	"fmt"
	"go/ast"
	"go/parser"
)

func generateTest(pkg *ast.Package, fileName string, ty *ast.TypeSpec) (*ast.File, error) {
	a, err := parser.ParseFile(fileSet, "", `
		// DO NOT EDIT. Autogenerated with github.com/tcard/gosumwalk.

		package `+pkg.Name+`

		import "testing"
`, parser.ParseComments)

	variants, err := findVariants(pkg, fileName, ty)
	if err != nil {
		return nil, fmt.Errorf("finding variants of type %v: %v", ty.Name, err)
	}

	gen := generator{a, ty, variants}
	gen.genTests()

	return a, err
}

func (gen generator) genTests() {
	b := []ast.Stmt{}
	f := &ast.FuncDecl{
		Name: &ast.Ident{Name: "TestSelect" + gen.ty.Name.Name},
		Type: &ast.FuncType{
			Params: &ast.FieldList{List: []*ast.Field{{
				Names: []*ast.Ident{{Name: "t"}},
				Type:  &ast.Ident{Name: "*testing.T"},
			}}},
		},
		Body: &ast.BlockStmt{List: b},
	}
	gen.a.Decls = append(gen.a.Decls, f)

}
